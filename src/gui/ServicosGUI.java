package gui;

import dao.ClienteDAO;
import dao.ProcessoDAO;
import dto.ProcessoDTO;
import dao.ServicoDAO;
import dto.ServicoDTO;
import dto.ClienteDTO;
import dto.UtilizadorDTO;
import exceptions.ExceptionDAO;
import java.math.BigDecimal;


import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author joao
 */
public class ServicosGUI extends javax.swing.JPanel {

    public ServicosGUI() throws ExceptionDAO {
        initComponents();
        
        loadDataSet();
        clearCampos();
    }
    
    public void loadDataSet() {
        try {
            ServicoDAO servicoDAO = new ServicoDAO();
            tblMain.setModel(servicoDAO.buildTableModel(servicoDAO.getQueryResult()));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public void loadSearchData(String texto) {
        try {
            ProcessoDAO processoDAO = new ProcessoDAO();
            tblMain.setModel(processoDAO.buildTableModel(processoDAO.getSearchResult(texto)));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void loadCbxClientes() throws ExceptionDAO {
        ClienteDAO clienteDAO = new ClienteDAO();
        List<ClienteDTO> clientesDTO = clienteDAO.getClientesDAO();
        for (ClienteDTO clienteDTO : clientesDTO) {
            cbxCliente.addItem(clienteDTO);
        }
    }
    
    public void clearCampos() {
        txtDescricao.setText("");
        txtPreco.setText("");
        txtFiltrar.setText("");
        cbxCliente.setSelectedIndex(-1);
        cbxEstado.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneMain = new javax.swing.JScrollPane();
        tblMain = new javax.swing.JTable();
        jLabelLinhasSelecionadas = new javax.swing.JLabel();
        txtFiltrar = new javax.swing.JTextField();
        lblServico = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        lblDescricao = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblPreco = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnRegistar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        cbxCliente = new javax.swing.JComboBox<>();
        cbxEstado = new javax.swing.JComboBox<>();
        txtPreco = new javax.swing.JTextField();
        lblFiltrar = new javax.swing.JLabel();

        tblMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMainMouseClicked(evt);
            }
        });
        jScrollPaneMain.setViewportView(tblMain);

        jLabelLinhasSelecionadas.setText("x de y linhas selecionadas.");

        txtFiltrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltrarKeyReleased(evt);
            }
        });

        lblServico.setText("Serviço");

        lblCliente.setText("Cliente");

        lblDescricao.setText("Descrição");

        lblEstado.setText("Estado");

        lblPreco.setText("Preço");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRegistar.setText("Registar");
        btnRegistar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistarActionPerformed(evt);
            }
        });

        btnApagar.setText("Apagar");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        cbxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ABERTO", "EM_ANDAMENTO", "CONCLUIDO" }));

        lblFiltrar.setText("Filtrar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(lblServico))
                                    .addComponent(lblPreco)
                                    .addComponent(lblDescricao)
                                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRegistar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCliente)
                                    .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEstado)
                                    .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabelLinhasSelecionadas)
                    .addComponent(lblFiltrar))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblFiltrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblServico)
                    .addComponent(txtFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLinhasSelecionadas))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblDescricao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(lblEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(lblPreco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRegistar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnApagar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblMain.getSelectedRow() < 0)
            JOptionPane.showMessageDialog(this, "Por favor selecione um Processo.");
        else {
            if (txtDescricao.getText().equals("") || txtPreco.getText().equals("") || cbxEstado.getSelectedItem().equals(null) || cbxCliente.getSelectedItem().equals(null)) {
                JOptionPane.showMessageDialog(null, "Por favor preencha todos os campos.");
            } else {
                ProcessoDTO processoDTO = new ProcessoDTO();
                processoDTO.setId((int) tblMain.getValueAt(tblMain.getSelectedRow(), 0));
                // sacar o id do serviço que esta na combobox
                ServicoDTO servicoDTO = (ServicoDTO) cbxCliente.getSelectedItem();
                if (servicoDTO != null) {
                    processoDTO.setIdServico(servicoDTO.getId());
                }
                
                UtilizadorDTO funcionarioDTO = (UtilizadorDTO) cbxEstado.getSelectedItem();
                if (funcionarioDTO != null) {
                    processoDTO.setIdFuncionario(funcionarioDTO.getId());
                }
                
                processoDTO.setDescricao(txtDescricao.getText());
                processoDTO.setCusto(BigDecimal.valueOf(Double.parseDouble(txtPreco.getText().replace(",", "."))));
                new ProcessoDAO().editarProcessoDAO(processoDTO);
                loadDataSet();
                clearCampos();
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnRegistarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistarActionPerformed
        if (txtDescricao.getText().equals("") || txtPreco.getText().equals("") || cbxEstado.getSelectedItem().equals(null) || cbxCliente.getSelectedItem().equals(null)) {
            JOptionPane.showMessageDialog(null, "Por favor preencha todos os campos."); 
        } else {
            ProcessoDTO processoDTO = new ProcessoDTO();
            // sacar o id do serviço que esta na combobox
            ServicoDTO servicoDTO = (ServicoDTO) cbxCliente.getSelectedItem();
            if (servicoDTO != null) {
                processoDTO.setIdServico(servicoDTO.getId());
            }
            
            UtilizadorDTO funcionarioDTO = (UtilizadorDTO) cbxEstado.getSelectedItem();
            if (funcionarioDTO != null) {
                processoDTO.setIdFuncionario(funcionarioDTO.getId());
            }

            processoDTO.setDescricao(txtDescricao.getText());
            processoDTO.setCusto(BigDecimal.valueOf(Double.parseDouble(txtPreco.getText().replace(",", "."))));
            new ProcessoDAO().registarProcessoDAO(processoDTO);
            loadDataSet();
            clearCampos();
        }
    }//GEN-LAST:event_btnRegistarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        if (tblMain.getSelectedRow()<0) {
            JOptionPane.showMessageDialog(null, "Por favor selecione um Processo.");
        } else{
            int opt = JOptionPane.showConfirmDialog(
                    null,
                    "Tem a certeza que deseja remover este Processo?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);
            if(opt==JOptionPane.YES_OPTION) {
                new ProcessoDAO().removerProcessoDAO((int)(tblMain.getValueAt(
                        tblMain.getSelectedRow(), 0)));
                loadDataSet();
                clearCampos(); 
            }
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    private void tblMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMainMouseClicked
        int linha = tblMain.getSelectedRow();
        int coluna = tblMain.getColumnCount();
        Object[] val = new Object[coluna];

        for (int i = 0; i < coluna; i++) {
            val[i] = tblMain.getValueAt(linha, i);
        }
        
        // Escolhe o cliente do servico selecionado na cbxCliente
        for (int i = 0; i < cbxCliente.getItemCount(); i++) {
            ClienteDTO clienteDTO = cbxCliente.getItemAt(i);
            if (clienteDTO.getNome().equals(val[1].toString())) {
                cbxCliente.setSelectedItem(clienteDTO);
                break;
            }
        }
        
        txtDescricao.setText(val[2].toString());
        cbxEstado.setSelectedItem(val[3].toString().toUpperCase().replace(" ", "_").replace("Í", "I"));
        txtPreco.setText(val[4].toString());
    }//GEN-LAST:event_tblMainMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        clearCampos();
        loadDataSet();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtFiltrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltrarKeyReleased
        String texto = txtFiltrar.getText();
        loadSearchData(texto);
    }//GEN-LAST:event_txtFiltrarKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnRegistar;
    private javax.swing.JComboBox<ClienteDTO> cbxCliente;
    private javax.swing.JComboBox<String> cbxEstado;
    private javax.swing.JLabel jLabelLinhasSelecionadas;
    private javax.swing.JScrollPane jScrollPaneMain;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFiltrar;
    private javax.swing.JLabel lblPreco;
    private javax.swing.JLabel lblServico;
    private javax.swing.JTable tblMain;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtFiltrar;
    private javax.swing.JTextField txtPreco;
    // End of variables declaration//GEN-END:variables
}
